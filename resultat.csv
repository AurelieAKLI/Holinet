DET##cpos=D|g=f|mwehead=ADV+|n=s|s=def|pred=y##	Det:Fem+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|mwehead=ADV+|n=s|s=ind|pred=y##	Det:Fem+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ; ;1;1
DET##cpos=D|g=f|mwehead=DET+|n=s|s=def|pred=y##	Det:Fem+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|mwehead=DET+|n=s|s=ind|pred=y##	Det:Fem+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ; ;1;1
DET##cpos=D|g=f|mwehead=NPP+|n=s|s=def|pred=y##	Det:Fem+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|mwehead=NPP+|n=s|s=ind|pred=y##	Det:Fem+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ; ;1;1
DET##cpos=D|g=f|mwehead=NPP+|n=s|s=poss|pred=y##	Det:Fem+SG+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|p=1|s=poss##	Det:Fem+PL+P1+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P1+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P1:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+P1+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P1:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P1+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|p=2|s=poss##	Det:Fem+PL+P2+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P2+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P2:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+P2+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P2:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P2+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|p=3|s=poss##	Det:Fem+PL+P3+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P3+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+P3+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+P3+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|s=card##	Det:Fem+PL+Card;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Card'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Cardr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+Card'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Card'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|s=def##	Det:Fem+PL+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|s=dem##	Det:Fem+PL+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=p|s=ind##	Det:Fem+PL+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+PL+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+PL+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|p=3|s=poss##	Det:Fem+SG+P3+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+P3+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+P3+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+P3+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|s=card##	Det:Fem+SG+Card;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Card'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Cardr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Card'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Card'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|s=def##	Det:Fem+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|s=def|pred=y##	Det:Fem+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|s=dem##	Det:Fem+SG+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=f|n=s|s=ind##	Det:Fem+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ; ;1;1
DET##cpos=D|g=f|n=s|s=ind|pred=y##	Det:Fem+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Indef'}) return DISTINCT PROPERTIES(n);-  une  -  ; ;1;1
DET##cpos=D|g=f|n=s|s=neg##	Det:Fem+SG+Neg;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Neg'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Neg:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Negr:r_pos]->(nouveau:n_pos{name:'Det:Fem+SG+Neg'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Fem:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Neg:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Fem+SG+Neg'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|mwehead=ADV+|n=s|s=def|pred=y##	Det:Mas+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|mwehead=ADV+|n=s|s=ind|pred=y##	Det:Mas+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|mwehead=DET+|n=s|s=ind|pred=y##	Det:Mas+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|mwehead=NC+|n=s|s=def|pred=y##	Det:Mas+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|mwehead=NPP+|n=s|s=def|pred=y##	Det:Mas+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|p=1|s=poss##	Det:Mas+PL+P1+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+P1+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P1:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+P1+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P1:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+P1+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|p=3|s=poss##	Det:Mas+PL+P3+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+P3+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+P3+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+P3+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|s=card##	Det:Mas+PL+Card;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Card'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Cardr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+Card'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Card'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|s=def##	Det:Mas+PL+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|s=dem##	Det:Mas+PL+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=p|s=ind##	Det:Mas+PL+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Mas+PL+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Plur:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+PL+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|p=2|s=poss##	Det:Mas+SG+P2+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+P2+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P2:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+P2+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P2:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+P2+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|p=3|s=poss##	Det:Mas+SG+P3+Pos;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+P3+Pos'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0 AND rrrrr.weight>0  MERGE (n)-[Posr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+P3+Pos'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'P3:'}) , (n:n_term)-[rrrrr:r_pos]->(mmmmm:n_pos{name:'Pos:'})  SET (CASE WHEN NOT exists(rrrrr.weight) THEN rrrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight+ rrrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+P3+Pos'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=card##	Det:Mas+SG+Card;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Card'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Cardr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Card'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Card:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Card'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=def##	Det:Mas+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=def|pred=y##	Det:Mas+SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=dem##	Det:Mas+SG+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=dem|pred=y##	Det:Mas+SG+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=ind##	Det:Mas+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=ind|pred=y##	Det:Mas+SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=neg##	Det:Mas+SG+Neg;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Neg'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Neg:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Negr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Neg'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Neg:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Neg'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|g=m|n=s|s=part##	Det:Mas+SG+Part;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Part'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Part:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0 AND rrrr.weight>0  MERGE (n)-[Partr:r_pos]->(nouveau:n_pos{name:'Det:Mas+SG+Part'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Mas:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Sing:'}) , (n:n_term)-[rrrr:r_pos]->(mmmm:n_pos{name:'Part:'})  SET (CASE WHEN NOT exists(rrrr.weight) THEN rrrr END).weight= (r.weight+ rr.weight+ rrr.weight+ rrrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:Mas+SG+Part'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=DET+|n=p|s=ind|pred=y##	Det:PL+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:PL+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=DET+|s=card|pred=y##	Det:+Card;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:+Card'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:':'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Card:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Cardr:r_pos]->(nouveau:n_pos{name:'Det:+Card'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:':'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Card:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:+Card'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=NPP+|n=s|s=def|pred=y##	Det:SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=PRO+|n=p|s=ind|pred=y##	Det:PL+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:PL+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=PRO+|n=s|s=def|pred=y##	Det:SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|mwehead=PRO+|n=s|s=ind|pred=y##	Det:SG+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:SG+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|n=p|s=dem|pred=y##	Det:PL+Dem;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Dem'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Dem:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Demr:r_pos]->(nouveau:n_pos{name:'Det:PL+Dem'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Dem:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Dem'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|n=p|s=ind|pred=y##	Det:PL+Indef;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Indefr:r_pos]->(nouveau:n_pos{name:'Det:PL+Indef'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Plur:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Indef:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:PL+Indef'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|n=s|pred=y##	Det:SG;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'})  WHERE r.weight>0 AND rr.weight>0  MERGE (n)-[SGr:r_pos]->(nouveau:n_pos{name:'Det:SG'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'})  SET (CASE WHEN NOT exists(rr.weight) THEN rr END).weight= (r.weight+ rr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|n=s|s=def##	Det:SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  WHERE r.weight>0 AND rr.weight>0 AND rrr.weight>0  MERGE (n)-[Defr:r_pos]->(nouveau:n_pos{name:'Det:SG+Def'}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'}) , (n:n_term)-[rr:r_pos]->(mm:n_pos{name:'Sing:'}) , (n:n_term)-[rrr:r_pos]->(mmm:n_pos{name:'Def:'})  SET (CASE WHEN NOT exists(rrr.weight) THEN rrr END).weight= (r.weight+ rr.weight+ rrr.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
DET##cpos=D|n=s|s=def|pred=y##	Det:SG+Def;MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-       ;MATCH  (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'})  WHERE r.weight>0  MERGE (n)-[Detr:r_pos]->(nouveau:n_pos{name:'Det:}}) RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:'})  SET (CASE WHEN NOT exists(r.weight) THEN r END).weight= (r.weight)/3   RETURN DISTINCT PROPERTIES(n);MATCH (n:n_term)-[r:r_pos]->(m:n_pos{name:'Det:SG+Def'}) return DISTINCT PROPERTIES(n);-  ;null;0;0
